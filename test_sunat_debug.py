#!/usr/bin/env python3
"""
Simple test script for SUNAT debugging
Tests with a known working RUC to identify the issue
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from debug_sunat_scraper import SUNATDebugger

async def test_known_ruc():
    """Test with a known RUC that should work"""
    # RUC de BACKUS (empresa conocida que deber√≠a existir)
    test_ruc = "20100070970"
    
    print(f"üîç TESTING SUNAT DEBUG CON RUC: {test_ruc}")
    print(f"üìù Esta es la empresa: UNION DE CERVECERIAS PERUANAS BACKUS Y JOHNSTON S.A.A.")
    print(f"üéØ Este RUC deber√≠a funcionar para identificar el problema")
    
    debugger = SUNATDebugger()
    
    try:
        result = await debugger.debug_ruc_extraction(test_ruc)
        
        print(f"\n" + "="*60)
        print(f"RESULTADO DEL DEBUG")
        print(f"="*60)
        
        print(f"RUC testeado: {result['ruc']}")
        print(f"Timestamp: {result['timestamp']}")
        print(f"CAPTCHA detectado: {'S√ç' if result['captcha_detected'] else 'NO'}")
        print(f"Archivos guardados en: {result['debug_dir']}")
        
        print(f"\nüìä MEJOR RESULTADO:")
        print(f"   Estrategia exitosa: {result['best_result']['strategy']}")
        print(f"   Raz√≥n Social extra√≠da: {result['best_result']['razon_social']}")
        print(f"   M√©todo usado: {result['best_result'].get('method', 'N/A')}")
        print(f"   √âxito: {'‚úÖ S√ç' if result['best_result']['success'] else '‚ùå NO'}")
        
        print(f"\nüîç TODAS LAS ESTRATEGIAS:")
        for i, strategy in enumerate(result['all_results']['strategies']):
            status = "‚úÖ" if strategy['success'] else "‚ùå"
            print(f"   {i+1}. {strategy['name']}: {status} - {strategy.get('razon_social', 'N/A')}")
        
        successful_count = len([s for s in result['all_results']['strategies'] if s['success']])
        print(f"\nüìà Resumen: {successful_count}/{len(result['all_results']['strategies'])} estrategias exitosas")
        
        if result['captcha_detected']:
            print(f"\n‚ö†Ô∏è  IMPORTANTE: CAPTCHA fue detectado")
            print(f"   Esto podr√≠a explicar por qu√© falla el scraping en producci√≥n")
            print(f"   SUNAT puede estar requiriendo verificaci√≥n humana")
        
        if not result['best_result']['success']:
            print(f"\n‚ùå PROBLEMA IDENTIFICADO:")
            print(f"   Ninguna estrategia pudo extraer la raz√≥n social correctamente")
            print(f"   Revisar los archivos HTML y screenshots para identificar:")
            print(f"   1. Si SUNAT cambi√≥ la estructura de la p√°gina")
            print(f"   2. Si hay elementos din√°micos que no esperamos")
            print(f"   3. Si hay CAPTCHA o bloqueos")
        
        print(f"\nüìÅ ARCHIVOS PARA REVISAR:")
        print(f"   ‚Ä¢ Screenshots: 01_pagina_inicial_*.png, 02_despues_submit_*.png") 
        print(f"   ‚Ä¢ HTML completo: 03_html_completo_*.html")
        print(f"   ‚Ä¢ Texto extra√≠do: 04_texto_pagina_*.txt")
        print(f"   ‚Ä¢ Debug info: 05_debug_info_*.json")
        print(f"   ‚Ä¢ Resultados extracci√≥n: 06_extraccion_resultados_*.json")
        
        return result
        
    except Exception as e:
        print(f"\n‚ùå ERROR EN DEBUG: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    result = asyncio.run(test_known_ruc())
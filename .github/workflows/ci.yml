name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Run tests
      run: pytest -v
      env:
        NEON_CONNECTION_STRING: postgresql://test:test@localhost:5432/test

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        audience: https://github.com/ENEASJO/registro-valorizaciones-backend

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build and push Docker image
      run: |
        gcloud builds submit --tag gcr.io/${{ secrets.PROJECT_ID }}/registro-valorizaciones-backend:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy registro-valorizaciones-backend \
          --image gcr.io/${{ secrets.PROJECT_ID }}/registro-valorizaciones-backend:${{ github.sha }} \
          --region southamerica-west1 \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 4Gi \
          --cpu 2 \
          --timeout 900s \
          --max-instances 10 \
          --set-env-vars NEON_CONNECTION_STRING=${{ secrets.NEON_CONNECTION_STRING }}